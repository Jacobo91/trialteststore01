{{ 'main-product-sale.css' |  asset_url |  stylesheet_tag }}



<div class="page-width product">
  {% assign current_variant = product.selected_or_first_available_variant %}

  <h2 class="product_title" id="product_title">
    {{ product.title }}
  </h2>
  <div class="product-wrapper">
    <!-- Product Media -->
    <div class="media-container">
      <!-- Swiper -->
      <div class="swiper">
        <div class="swiper-wrapper">
          <div class="swiper-slide" >
            <img src="{{ current_variant.featured_image |  image_url: width: 1000}}" id="thumbnail_big">
          </div>
        </div>
    
        <!-- Navigation buttons -->
        <div class="swiper-button-prev"><span></span></div>
        <div class="swiper-button-next"><span></span></div>
      </div>
    
      <!-- Thumbnails gallery -->
      <div class="gallery">
        <div class="gallery__image-wrapper">
          <img src="{{ current_variant.featured_image |  image_url: width: 80}}" id="thumbnail_small">
        </div>
      </div>

    </div>
    
    <div class="product-info">
        <!-- product price -->
      <p class="product-info__price">
          <span class="price-sale" id="price" style="color: red; display: none;"></span>
          <span class="compare-price" id="compared_at_price"></span>
          <span class="price-standard" id="price-standard" style="color: black; display: none;"></span>
      </p>
      
      <!-- Product Options -->
      {% if product.options.size > 0 %}
        {% for option in product.options %}
          {% if option == 'Color' %}
            <p>{{ option }}:</p>
            {% for value in product.options_by_name[option].values %}
              <label class="color-label">
                <input 
                    type="radio" 
                    name="Color" 
                    value="{{ value }}" 
                    style="background-color: {{ value }};"
                    id="color"        
                >
                
            </label>
              {% endfor %}
              <p></p>
          {% elsif option == 'Size' %}
            <label>
              <p>{{ option }}:</p>
              <select name="Size" id="size">
                <option >Please Select</option>
                {% for value in product.options_by_name[option].values %}
                  <option value="{{ value }}">{{ value }}</option>
                {% endfor %}
              </select>
            </label>
          {% endif %}
        {% endfor %}
      {% endif %}
      
      <p>
        <span id="color-feedback">Color: {{ product.selected_or_first_available_variant.option2 }},</span>
        <span id="size-feedback">Size: {{ product.selected_or_first_available_variant.option1 }}</span>
      </p>

    </div>
  

  </div>

</div> 


<script defer>

  let current_variant;
  const colorInput = document.querySelectorAll('#color');
  const sizeInput = document.getElementById('size');
  const variants = {{ product.variants | json }};
  const media = {{ product.media | json}}
  let currentId;
  let selectedSize;
  let selectedColor;
  let selectedVariantId;

  console.log(variants);

  function formatMoney(amount, currency = 'USD', locale = 'en-US') {
    const formatter = new Intl.NumberFormat(locale, {
        style: 'currency',
        currency: currency,
        minimumFractionDigits: 2
    });

    const formattedAmount = formatter.format(amount / 100);
    return formattedAmount;
}

function updateUrlWithVariantId(id) {
    const urlParams = new URLSearchParams(window.location.search);
    const variantParam = 'variant';

    if (urlParams.has(variantParam)) {
        urlParams.set(variantParam, id);
    } else {
        urlParams.append(variantParam, id);
    }

    const newUrl = `${window.location.pathname}?${urlParams.toString()}`;
    history.replaceState(null, '', newUrl);

    const current_variant = variants.find(variant => variant.id == id);
    const featured_image = current_variant.featured_image.src;
    const filteredMedia = media.filter(item => item.alt == current_variant.featured_media.alt);
    console.log('filteredMedia:', filteredMedia)
    const imageBig = document.getElementById('thumbnail_big');
    const imageSmall = document.getElementById('thumbnail_small');
    const price = document.getElementById('price');
    const comparedAtPrice = document.getElementById('compared_at_price');
    const priceStd = document.getElementById('price-standard');

    imageBig.setAttribute('src', featured_image);
    imageSmall.setAttribute('src', featured_image);

    // Create swiper
    const swiperWrapper = document.querySelector('.swiper-wrapper');
    swiperWrapper.innerHTML = '';

    filteredMedia.forEach(media => {

        const swiperSlide = document.createElement('div');
        swiperSlide.classList.add('swiper-slide');

        const image = document.createElement('img');
        image.src = media.src;
        image.setAttribute('id', 'thumbnail_big');

        swiperSlide.appendChild(image);

        swiperWrapper.appendChild(swiperSlide);
    });

// Create Gallery
const galleryImageWrapper = document.querySelector('.gallery__image-wrapper');
galleryImageWrapper.innerHTML = ''
// Loop through each item in filteredMedia and append images to galleryImageWrapper
filteredMedia.forEach(media => {
    // Create an img element
    const image = document.createElement('img');
    image.src = media.src;
    image.setAttribute('id', 'thumbnail_small');

    // Append the img element to the existing gallery wrapper
    galleryImageWrapper.appendChild(image);
});

    if (current_variant.compare_at_price !== null && current_variant.compare_at_price > current_variant.price) {
        price.textContent = formatMoney(current_variant.price);
        comparedAtPrice.textContent = formatMoney(current_variant.compare_at_price);
        price.style.display = 'inline'; // Display the sale price
        comparedAtPrice.style.display = 'inline'; // Display the compared price
        priceStd.style.display = 'none'; // Hide the standard price
    } else if (current_variant.price !== null) {
        price.textContent = ''; // Hide the sale price
        comparedAtPrice.textContent = ''; // Hide the compared price
        priceStd.textContent = formatMoney(current_variant.price);
        priceStd.style.display = 'inline'; // Display the standard price
    } else {
        price.style.display = 'none'; // Hide the sale price
        comparedAtPrice.style.display = 'none'; // Hide the compared price
        priceStd.style.display = 'none'; // Hide the standard price
    }
}


  function findVariantId() {
    let id;

    if (selectedColor && !selectedSize) {
      const variant = variants.find(variant => variant.option2 == selectedColor);
      id = variant.id;
      current_variant = variant;
      console.log("variant by color id:", current_variant);
    } else if (selectedColor && selectedSize) {
      const variant = variants.find(variant => variant.option1 == selectedSize && variant.option2 == selectedColor);
      id = variant.id;
      current_variant = variant;
      console.log("variant by color & size id:", current_variant);
    }

    console.log("id:", id);

    if (id) {
      updateUrlWithVariantId(id);
      
    }
  }

  colorInput.forEach(input => input.addEventListener('change', function() {
    document.getElementById('color-feedback').textContent = `Color: ${input.value}, `;
    selectedColor = input.value;
    console.log("selected color:", selectedColor);
    findVariantId();
  }));

  sizeInput.addEventListener("change", function(e) {
    const { value } = e.target;
    document.getElementById('size-feedback').textContent = `Size: ${value}`;
    selectedSize = value;
    console.log("selected size:", selectedSize);
    findVariantId();
  });

  function setInitialValues() {
    selectedColor = colorInput[0].value;
    findVariantId();
  }

  document.addEventListener("DOMContentLoaded", function() {
    setInitialValues();
  });

</script>







