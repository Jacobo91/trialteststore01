<style>
  .product {
    display: grid;
    place-items: center;
  }

  .product_title {
    font-weight: bolder;
  }

  .product-wrapper {
    display: grid;
    place-items: center;
  }

  .media-container {
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
  }

  .swiper {
    position: relative;
    width: 100%;
    height: 400px;
    overflow: hidden;
  }

  .swiper-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
  }

  .swiper-slide {
    flex: 0 0 100%;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
  }

  .swiper-button-prev,
  .swiper-button-next {
    width: 30px;
    height: 30px;
    background-size: cover;
    cursor: pointer;
  }

  .swiper-button-prev {
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 27 44'%3E%3Cpath d='M0,22L22,0l2.1,2.1L4.2,22l19.9,19.9L22,44L0,22L0,22L0,22z' fill='%234c71ae'%3E%3C/path%3E%3C/svg%3E") !important;
    color: black
    }

    .swiper-button-next {
        background-image: url('data:image/svg+xml;charset=utf-8,%3Fxml version="1.0" encoding="utf-8"%3F%3Csvg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"%3E%3Cpath d="M4 12H20M20 12L16 8M20 12L16 16" stroke="%23000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"%3E%3C/path%3E%3C/svg%3E') !important;
        color: black
        }

    .gallery {
        width: 100%;
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
    }

    .gallery img {
        cursor: pointer;
    }

    .product-info {
        align-self: flex-start;
    }

    .price-sale {
        color: red;
        font-size: 2rem;
        font-weight: 600;
    }

    .compare-price {
        font-size: 14px;
        text-decoration: line-through;
    }

    @media screen and (min-width: 750px) {
        .product-wrapper {
        grid-template-columns: repeat(2, 1fr);
        }

    }

    .product-info p {
        margin-bottom: 0;
    }

    .size-title {
        margin-top: 0;
    }

    .color-label {
        cursor: pointer;
    }

    .color-label input[type="radio"] {
        display: none;
    }

    .color-sample {
        display: inline-block;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        position: relative;
        top: 4px;
    }

  /* Styling for checked radio button */
  .color-label input[type="radio"]:checked + .color-sample::before {
    content: "";
    display: block;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    background-color: transparent; /* Green color */
    border: 2px solid #2d59f9;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .color-name {
    margin-left: 8px;
  }

  .share {
    text-transform: capitalize;
    font-weight: 600;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 1rem;
  }

  .share p {
    margin-top: 0;
  }

  .share a {
    color: black;
    text-decoration: none;
  }

  hr {
    margin: 1rem 0;
  }

</style>

<div class="page-width product">
  <h2 class="product_title" id="product_title">
    {{ product.title }}
  </h2>
  <div class="product-wrapper">
    <div class="media-container">
      <div class="swiper">
        <div class="swiper-wrapper">
          <!-- Slides -->
          {% for image in product.images %}
            <div class="swiper-slide" style="background-image: url('{{ image | img_url: 'large' }}')">
              <span></span>
            </div>
          {% endfor %}
        </div>

        <!-- If we need navigation buttons -->
        <div class="swiper-button-prev"><span></span></div>
        <div class="swiper-button-next"><span></span></div>
      </div>

      <div class="gallery">
        {% for image in product.images %}
          <img src="{{ image | image_url: width: 60 }}" alt="{{ product.title }}">
        {% endfor %}
      </div>
    </div>
    
    
    
    
    <div class="product-info">
        <!-- Price -->
        {% if product.compare_at_price and product.compare_at_price > product.price %}
            <p class="product-info__price">
                <span class="price-sale">{{ product.price | money }} </span>
                <span class="compare-price">{{ product.compare_at_price | money }}</span>
            </p>
        {% else %}
            <p class="product-info__price">{{ product.price | money }}</p>
        {% endif %}
        
        <!-- Color Options as Radio Buttons -->
        <div class="color-options">
            <p>Color:</p>
            {% assign uniqueColorOptions = '' | split: '' %}
            {% for variant in product.variants %}
                {% assign colorOption = variant.option2 %} <!-- Replace 'option1' with the correct key for colors -->
                {% unless uniqueColorOptions contains colorOption %}
                {% assign uniqueColorOptions = uniqueColorOptions | push: colorOption %}
                <label class="color-label">
                    <input 
                        type="radio" 
                        name="Color" 
                        value="{{ variant.id }}" 
                        {% if variant == product.selected_or_first_available_variant and colorOption == product.selected_or_first_available_variant.option2 %}checked="checked" {% endif %}
                        data-colorChoice="{{ product.selected_or_first_available_variant.option2 }}"        
                    >
                    <span class="color-sample" style="background-color: {{ colorOption }};"></span>
                    
                </label>
                {% endunless %}
            {% endfor %}
            <span class="color-name">{{ colorOption }}</span>
        </div>

        <br>

        <!-- Size Selector -->
        <p class="size-title">Size:</p>
        <select 
            name="Size" 
            id="size-selector" 
            data-sizeChoice="{{ product.selected_or_first_available_variant.option1 }}"
        >
        <option value="">Please Select</option>
        {% assign uniqueColorOptions = '' | split: '' %}
        {% for variant in product.variants %}
            {% assign colorOption = variant.option1 %}
            {% unless uniqueColorOptions contains colorOption %}
            {% assign uniqueColorOptions = uniqueColorOptions | push: colorOption %}
            <option value="{{ variant.id }}" {% if variant == product.selected_or_first_available_variant and
                colorOption == product.selected_or_first_available_variant.option1 %}selected="selected" {% endif %}>
                {{ colorOption }}
            </option>
            {% endunless %}
        {% endfor %}
        </select>
        <br>

        <!-- Selections feedback -->
        <p>
            <span>Color: <span class="color-choice" id="colorFeedback">{{ product.selected_or_first_available_variant.option2 }}</span></span>
            <span>Size: <span class="size-choice" id="sizeFeedback">{{ product.selected_or_first_available_variant.option1 }}</span></span>
        </p>

        <hr>
        
        <!-- Share links -->

        <div class="share">
            <p>Share:</p>
            <a href="#" onclick="shareOnFacebook()"><i class="fab fa-facebook-f"></i></a>
            <a href="#" onclick="shareOnTwitter()"><i class="fab fa-twitter"></i></a>
            <a href="#" onclick="shareOnPinterest()"><i class="fab fa-pinterest"></i></a>
        </div>

    </div>
        
</div>
</div>

{% schema %}
    {
        "name": "Main Product Sale",
        "tag": "section",
        "class": "section",
            "settings": []
    }
{% endschema %}